##############################################################################
# cmake configuration file for MarlinMT
#
# returns following variables:
#
#   MarlinMT_FOUND      : set to TRUE if MarlinMT found
#       if FIND_PACKAGE called with REQUIRED and COMPONENTS arguments
#       MarlinMT_FOUND is only set to TRUE if ALL components are also found
#       if REQUIRED is NOT set components may or may not be available
#
#   MarlinMT_ROOT                     : path to this MarlinMT installation
#   MarlinMT_VERSION                  : package version
#   MarlinMT_BUILD_CXX_STANDARD       : CXX standard with which MarlinMT was built
#   MarlinMT::Core                    : the MarlinMT core imported library target
#   MarlinMT::${COMPONENT}            : the MarlinMT component imported library target
#   MarlinMT_${COMPONENT}_FOUND       : set to TRUE or FALSE for each library
#
# @author Remi Ete, DESY
##############################################################################


@PACKAGE_INIT@

set( MarlinMT_FOUND TRUE )

set( MarlinMT_ROOT                     @CMAKE_INSTALL_PREFIX@ )
set( MarlinMT_VERSION                  @MarlinMT_VERSION@ )
set( MarlinMT_BUILD_CXX_STANDARD       @CMAKE_CXX_STANDARD@ )
set_and_check( MarlinMT_INCLUDE_DIRS   @PACKAGE_CMAKE_INSTALL_INCLUDEDIR@ )
set_and_check( MarlinMT_LIBRARY_DIR    @PACKAGE_CMAKE_INSTALL_LIBDIR@ )

# Import MarlinMT targets in MarlinMT:: namespace
include( ${CMAKE_CURRENT_LIST_DIR}/MarlinMTConfig-targets.cmake )

# MarlinMT::Core is a mandatory target
if( NOT TARGET MarlinMT::Core )
	message( FATAL_ERROR "Couldn't import MarlinMT::Core library!" )
endif()

set( MarlinMT_MISSING_COMPONENTS )
foreach( comp ${MarlinMT_FIND_COMPONENTS} )
	# The component can a normal library target
	if( NOT TARGET MarlinMT::${comp} )
		# In MarlinMT, plugin libraries (MODULE) are not exported
		# to avoid unnecessary linking from user and double counting 
		# of plugins at runtime.
		# So here we just check if we have a library up there
		if( "${comp}" MATCHES ".*Plugins$" )
			find_library( MarlinMT_${comp}_MODULE MarlinMT${comp} PATHS ${MarlinMT_LIBRARY_DIR} NO_DEFAULT_PATH )
			if( NOT MarlinMT_${comp}_MODULE )
				list( APPEND MarlinMT_MISSING_COMPONENTS ${comp} )	
			else()
				set( MarlinMT_${comp}_FOUND TRUE )
			endif()
			# In any case, reset the cache variable
			set( MarlinMT_${comp}_MODULE )
		else()
			list( APPEND MarlinMT_MISSING_COMPONENTS ${comp} )			
		endif()
	else()
		set( MarlinMT_${comp}_FOUND TRUE )
	endif()
endforeach()

check_required_components( MarlinMT )

if( NOT MarlinMT_FIND_QUIET AND MarlinMT_MISSING_COMPONENTS )
	if( MarlinMT_FIND_REQUIRED )
		message( FATAL_ERROR "MarlinMT not found. Missing components: ${MarlinMT_MISSING_COMPONENTS}" )
	else()
		message( WARNING "MarlinMT: some components are missing: ${MarlinMT_MISSING_COMPONENTS}" )
	endif()
endif()
