#pragma once
// MarlinMT book config
// WARNING: this header has been generated at configure time via CMake.
// Modification may be lost ...
#include <marlinmt/book/configs/@MARLIN_BOOK_IMPL_HEADER@>
#include <marlinmt/book/BookStore.h>
#include <marlinmt/book/Handle.h>
#include <marlinmt/book/Hist.h>

namespace marlinmt {
    
  // import types and forward declarations
 
  template<typename P>
  using AxisConfig = book::types::AxisConfig<P> ;
  
  template <typename P, typename W, std::size_t D>
  using HistConfig = book::types::HistConfig<P, W, D> ;
  
  template <typename P, typename W, std::size_t D>
  using HistT = book::types::HistT<HistConfig<P, W, D>> ;
  
  using BookFlag_t = book::Flag_t ;
	namespace BookFlags = book::Flags::Book ;
  
  template <typename T>
  class Entry ;
  
  // AxisConfig types
  using AxisConfigF = AxisConfig<float> ;
  using AxisConfigD = AxisConfig<double> ;
  using AxisConfigI = AxisConfig<int> ;
  
  // Histogram types
  using Hist1F = book::types::H1F ;
  using Hist1D = book::types::H1D ;
  using Hist1I = book::types::H1I ;
  using Hist2F = book::types::H2F ;
  using Hist2D = book::types::H2D ;
  using Hist2I = book::types::H2I ;
  using Hist3F = book::types::H3F ;
  using Hist3D = book::types::H3D ;
  using Hist3I = book::types::H3I ;
  
  // Handle on histogram entries
  // This is what you get when you book something
  // using the ProcessorApi::Book::create()
  using H1FEntry = book::Handle<book::Entry<Hist1F>> ;
  using H1DEntry = book::Handle<book::Entry<Hist1D>> ;
  using H1IEntry = book::Handle<book::Entry<Hist1I>> ;
  using H2FEntry = book::Handle<book::Entry<Hist2F>> ;
  using H2DEntry = book::Handle<book::Entry<Hist2D>> ;
  using H2IEntry = book::Handle<book::Entry<Hist2I>> ;
  using H3FEntry = book::Handle<book::Entry<Hist3F>> ;
  using H3DEntry = book::Handle<book::Entry<Hist3D>> ;
  using H3IEntry = book::Handle<book::Entry<Hist3I>> ;
  
  // Handle on histograms
  // This is what you get when you call entry.handle()
  using H1FHandle = book::Handle<Hist1F> ;
  using H1DHandle = book::Handle<Hist1D> ;
  using H1IHandle = book::Handle<Hist1I> ;
  using H2FHandle = book::Handle<Hist2F> ;
  using H2DHandle = book::Handle<Hist2D> ;
  using H2IHandle = book::Handle<Hist2I> ;
  using H3FHandle = book::Handle<Hist3F> ;
  using H3DHandle = book::Handle<Hist3D> ;
  using H3IHandle = book::Handle<Hist3I> ;
  
}
